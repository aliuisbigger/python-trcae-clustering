%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 269 575 522
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: 2022年6月9日 星期四 上午09时18分03秒 CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
1844 839 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

.200000 .200000 .200000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1844.00 0.00000 l
1844.00 839.000 l
0.00000 839.000 l
0.00000 0.00000 l
h
f
.200000 .200000 .200000 RG
.200000 .200000 .200000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1844.00 0.00000 l
1844.00 839.000 l
0.00000 839.000 l
0.00000 0.00000 l
h
f
.200000 .200000 .200000 RG
q
cliprestore
0 0 1844 839 rc
q
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1844.00 0.00000 l
1844.00 839.000 l
0.00000 839.000 l
0.00000 0.00000 l
h
f
q
[ 2475.00 0.00000 0.00000 839.000 0.00000 0.00000 ] concat
<<
/ImageType 1
/Width 2475  /Height 839
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [2475 0 0 839 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"-VH]/uqR3;!"Ak1QXbsT*mlpG5<Z`Do@7bX9$Q.rYfm0D!uH.qD#QR5hQ`8QgY#ti!92@49>L+%)n
8n%roYs`AI""Te\fiSi<4NJ/_#R:NdKb+P@V"FEmjG[7D+U^<Yh:#YQ;;Aal?$2e&f)>R.&9Q`MSU8+4
h`9RSFfXeMzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz(pFB#\6sA"Ku4Ar*Cm-%JImN9FGEEN%P\NK
(e@8]clHSg42aAu+sADS5^/$;mLTItLk2?)!0A#Z/JUJ)&F&@*,7:R:%[#*Y@NZ"4OH^r_42aC.Lk-sB
6;i\lmLT]\+U4YP"%`e!+O;#V&k[lqkRNa%*F^,u0p%VDTf^1XGDLeu6pae/JaO'Uh&uus&-GK1!$KT-
.2#7-)!DHlclHR<$8IX,,,%*:5^/$8-q$C"MLk1,$/Ha/U(@Du#ll*o*%;LmL)B+aOjG+X+:9ibPTle_
`'AO&JLEoQ;Mp%n&../9#,2Y28I5A6TJL6+r9pE\CWE>3r27g>qJS:lo8cWF`VSh[hKS2[;t'_'?lM"=
F/79_:I"Bf'>&GT8tOd$3B9)_4alP@Tm,CBGH_MqWKKO]#'.49J`u^1RM(<<+0-hf(s(\,"JX5_C.]0E
Ek&cZJN.]289fQ5XV-="ljfc:MXE0MJImN96t+T>d/V#F72lL4(d[c.qS.MCrbjFHpEs<M(n7LsrNk\:
fT+Xi^RY5CSHlTnW=NeoA#/6X#7hjq+!2$n>Zb*!?T`JreElO<Qn07;E+"35/,mYLc-26.NRd3)qJ`NB
W(%JiWm*,Kcn*DkqK'.V<B(Q;*\1##qL>TZ$:H&EH`T,,$U_hK>TXI-,8CJPK<g+r-cbM<b![CHQ9+@E
E<[V?@*P,t0>-ekTGlD$a"eaR0fCg$_Qia:4[30f<Mhi'g(&ca[%`R%_*EfC/#"_4;<\&=)T3U$!#RTn
k9l>ja3B+>kL9`@T+-9.mi>Uqr@e0?oO,B?3[/X@1M>!,:J^H8]/TX\X.K]J)h)Bqf@>r!#&'9rd+#:9
J6"iFd2jf2'F&]]XNEq>fJc&G'8Qk1[/jI9-k,PKk]m98\@=LU20J9<Ys()t0d7R0($c?dU"]RLA/'d^
E%->Te?Q;I@8P"e&r".C/erjY!+;V8qV1%[F6Ppdn*d^?rCm4gf-=ecdspoERDo07E(&hZ@IeL7nDX!<
fT@CK_G@<gO6W95fDr$O'Ufr+%FE6&,2-O<M8GpGPuX5#%/U6BAHFT.a3(Da'S^f6Zq)=Vk<Cg]FlL>r
r\Q&siK,oJh'"Lp)k`IT_@R_?,nP\i<gG-Bl<%2`0\F:>iXZ.lN0K/>+8tP_oB^q'hZLR`^m:QMk5G&3
cbESM3E"=MQT06Zi82.o$iZaeP<HTb7]U]5AcqZ9J+uC[f;"5?+-u"qYKR2aX!lKX$UiIqX&20@6?//d
]gY"5ZN7'f'\Ce^$q5C(8ebak!:<C&3-!rrPuh;F[5KnkMj[IGO[l*/,i'UUk6C.S,c,7"LXE)r4!tBc
N^CGP)iQ6RFc1UcoH=bG0]HDflPKS4f11_bIO9RDrT6?@LW)2uf:H!C<^$HWisk*Sfh'@R]fn525?=hE
/IVS;2cEq0\WG[mOWJo>_<\89mWZGC?,Q!+:S/[M+"qcm=(p[S@^!M*]5-$$47BiRmC1uu+10sE82ieH
jqj=.Yk5^+\X=;/:gZE2SpBIdL=7]^.%EDF1:6Y`kFTj=[.l9\+*VQN(/#g<W@b6X`j5\lj,H"SF3d#<
]^nn9l`gV&j2R)9qUW.H"]!`9/1%.$qEikFQ1E?r025,6]_^oo%BmefKuY6]Chd_Mbr=P(+10PdR0sn3
2KO%TW/WBn\O`LI8SN?k2Y*YC?Z,&3A&m:BUU(o41NNrW]Mtm?]aMdWpYW`,kKa"X(L&#*n(ukWGuir@
\?3cbfV/q?kPFl;?[:aur'?8@P(jFm\V9m#Ah%g!=RQ<rA]pD<qtK9o^9W="rV"uQJ,T%X\*a@!=0I)6
O[hG`*9sfc!r(p+UKb3Fc&[:XFbd/MrTdlif1Fq_MK8kV,c)'1aN*KiH2ce>^W7L=jo7$:g6PX`nf4X;
1ajndTqseZDSFVFh7GqZW_[+47/5jS4nMS*@rsb7=pP6%EbLUHIpp(0A>uJ\6TE>N+$\WOH>HFa*Hoo/
9lI\l\851=PF5dVf?P*@bCQVB(Q,)e?72T<IIDOO^%Yk,`Rpn]n&F?nbf`VrZFC,>I-/5aSPL!Vr="1!
b`:M+BLhOFF4!DmKurW#5Q:1?LCU.:]!<7aTkYFf.:,X@DN=A6DgjK9!\_+FP$;h7jgE]H94'o2q!c+P
#>>#qg"G'J&Tt^:BAI^^?")"og3NGKG@tQ1AN)keAnDsU&B_P8PLZ7j%%EPgG1gG&55A_M+ce2^-Vp=-
g:;Y/p8=L..W&hg:Sqi5W%D?n&An_9*I$:YiIr)&/q<?'p\t0d^JA3t/J-n4?ajq/`>;l$C7OX*7YcP^
T,B09L7YPXXC&_+r;KO,rUQ;i9OEi4$:"C7O$`CGB?SOYhjdE4V*:;XUSmKEoJA"N;/^JqEm'b#hu2te
e$1R7.+HQhc`LE\L:3@A9'MdNmDD:Yfl+\!FGsP>H?D3lDS,;Em+<+Y+Mns9P3:?E<($5XbQ_bUjWW_D
N.%s"+XGC\B>[F-g2!n:-I9+Z5a-VgZ?OXY>p-;aqWbJ(f7qQlk&T.[YA>>QIJ2?BqtB]UJS/8;q;l$!
$Rt`&hu7eGKgR'0%FAYP$U_gk2r5BmiK+a5Tq/f>mr#=J8B&+?Rae6:>]I`XO$4J!;G**bY\i.'E97iV
UK^`8$Xnd3D?I':GhotsKX!1hdJ<Vq[Ql+[1UJrcUtP.h;NmsTI'qI7WMbHfL(,)bYqLGaEGSKCP%SIk
o^m6=F8C4GKgYAZ;brTT)#KIfaSu/8dkNnl.+Gl6\/4bBd]b:j!<@VYj3RFh.^9!mIX#>u?hUWc@<T"m
g%tC-[r1$ujHEBjgR>)oc%sYNSi=D\DG@+^F/6an(LJ0)[ns-VQ`k(.==E]^Yi+$1;dhlIRq=8fQt\X[
VP_4`1Ke0=])fLU\T%8S[r^`8fo)P785HQg3,I?Xm:SZ\=ZsJIKQAATkJiK#[r:/q/?oujA<OY\F07/I
FbFf>FUT4^l"QIM32G;eYlu<cpdmOp-72'1PO;53%`I#Q5^`&AT/bCV_Cn^A@&QlM-.^_COK;q;6A%Xn
RB1fOs(%:RIH_C@m*Mul,6g=g"BSoTAb,9?X]lUIDR-qm>86?E:7deXG$2+8<H_*?2Knf+[qQ+?mCr7+
N6Yb!&R-B`a`GXk/SXdWbQ_a,RY@N4@pa%La<o7&0==t88Y5<dJ>U")Sj9)]?aA^RDD.:b`8]cc:[`n)
-I9)8f7l(/fq5:s#&%1"gjJ_<ak.D6GK:R[AIF8mS/\+1okC_F(g@][aYV0)Y.EnuJq_)I<SQ<^W\*'$
=WXc5YL"[[?MC.489Q!$qD>WGA<UZi%f?"h03(!50Nj:lR_AXOp[ZK\fAhcU2L1%`AbYWKagXRZ((T$J
N,ppY._6MRT>D`hq[OW-'Oan>G@PVGZ`Gu!gTo83/FEN=IlUZkrjQP/Jiid(]@_YQ`Pn#Y>IJ?NQ'$Gg
0?i`_GR.&FX%/,6>2SZB*%?;s%m9?sWXfL+pXWPeh7.H7)o$Q:EjAn$I/j0>ZVe7"[bJ*I%-?6neC6YU
gf(kVa\9,$_Ru<4HL\'/\fQRlHYb[d_QcE>&Z4Xn:U@,T7Ni%kI+lYKs8(>]acO$rU5Q1clDi4V,/5U1
6#,TkD(Mr84V6k)]`%QYZgVd@@Nq=SHhQeDG^"E$^%\hg@E4BKfle_""q>u@A>^WdX_CZOpl1*eH0:aZ
h*(`/e*/n_\k3OjEdOEkGItcIDnhi4iR(.;D+L7lSND&`got3S_;Ei9=aN_!),sK@#q(.^='T`6p>(Gs
("-%uq\nm><CD&+YjrVO5*M)*6Dl5p4IbK*A6]u<(S]BSo\b?42N3(C1^aEF^lq[6(nFHo+Xsgi4<rMZ
9bVGoljHZ=55$kth&)\YT#hgTlA0.\8nLe/UJUDjGA%ijeuW!fhVeA,hd:?hbN`sZddaAPndO\Q3+:N3
Sl'?TVXH6(p4Xng:JVcKqm*dMM!Xo%:S+VQQ\%I#ktedNPiC?r%I\:jqD9(b,;1%RB+d8HH';m(J$K/r
dk@L5*3]6?3.s"I*:!u>pqjhek`lO2ZH9F'PGR,qdJ:%#FS;c=^,l81+dACkP%Uh83LM`>M+')kh-(O'
TplQ]iD=];Y9)f2;YhI+@p^L>HN6<`^Y2q1pG;aCfVUmH[<qW6fe\g(VU,dYLir%7Kn$i3ieqC*g;61)
IXY^;DE`Jf6c#%a0S)pPo>NA3Z&A)@qWk=lPqt-L&Lt:**hhF_QoZ"$_sZ?m=8:OrI-*4lrT[J5GJ/G%
p3\rcVA<u\qQP\b7:`s%/%DGgk)F)%6JFO2_QA%<Fk6tu=dX/_IqEV);Gd-!4)\?g^AI=k)];D?9.mcN
Bfko^K??h>>Ktb'A_4N2BpLY+I"kpSO4RWX9uFRN*F[Lh6:'9Q";bBh@HVK#gjSqQfqd-%RZqoIUs^gB
YYNbK;^(S^';P0n(c#;6dnko[4jEOn=ZWaJXugQ+.[uYh#&BZi`lH,X<;N`b-^H.tSa\pV:Q1An4+)\6
`&fh6eaW!iZ1"STrFsq5K]LgOcTcF+0fh=!P3`,U7NjiM[)u>u#bOfET$U\'Iue;Ag:;9;r\P!LH>-lS
4/B1-gQop@?X6I!m;7Aca6<!n2JmW<M+?%He+_MRf[ld?@s$2\)+MhJaYVTM9l:;DWY_IW2b)uN^>q*Y
*O'?)2fIR.H,EPEpsgj>L(;s-o'BnkmbJ`9FR0BRYi+0cTSm<%6fHD2jOn]!H8.mm0_Qf`]u\jXTY"_+
GmfD'SLZ)6r'jK2-m[jGH1u`52b)uN^-m<X?^O3(hR:@J$\qX%ZR_69%3%3qGDpG.4g%U@S6Z']>:H85
lF^u5o+hh0SKW8jT,k.V'UjL"ZZqK;@perJkfOaU6K+$UVa(1NO3:!9"LRcTV7OCNfD2^MmhYYdNdYat
me-3&_Z2CMrbD"bbAMk0LWMdJ?$ik'6^YGlHKh7jr8A10?>Vk^GP8H^%199,Ku9`'X^rT$e@FpO10,uV
WSsFqmWn-#\([>=o^3p.ln*sT47#-"^]SMirH>/Ei9![e'hX=qE3(l'D/@.l/:3g3&)$mVc[R!?'M`9.
A@61J.dl@`@g1W?l;HU%p#9cCg$[5,9R[-SVcfsZ^@@2$PWI'pH5DD0:0+E]f9&D5q=)94LYB:H458EF
aid.^EH/8NhijD?PLZ\pX13)Zl)*L]O2i#im%(4Y/UmrdN]ZZRj,Gu)[PRk76RNhGfq]=hYp6]/oM/Gf
c<\Ef`"PqRnP-'1O09XC8=lO.+Z,a;)nM"=P3i`rC]UU[5=XOShgP$Ud@m,%,gWp6!SX;'\maq5S\<P*
f:[=bBLn`RZtpt4AtQ8.p0kIfhMoq9YqNXV_fridS`4-d<_noW2L2H0[k>3!DB$^(P7>mqNR82F?hj,/
]C!&Y?[k5Ima.%X6atmXB2<lrZ]f<Xp25i7-Dg2dL9n%BqD?U/_I;KENM..).<+kT$_;*ap25h,)#M0a
<jk3:l;-B#gnLKAo'FM0.3!sbqgHHF$\qN*iY1hu%Ul7,WD@rBGk,)_&XD&MbpK:TNmS;i6g4ERZa6n_
V0Y'9pGuY^ZFC,>XP33Jb!#oL_t:_0?$h_p;OGF/F3QS'5Q5n*]sd[BqH>Jp9l'?A1CFT^K=qG+.\.eY
9hg'8o:HQ"UZD+#*YXVNQm!G*1Ge:gS:05o/_fXOdaKb3W6'+.lL@:d?,m57p)@nZiL+>M.FfHM[/o!:
8,7hIq6dDS/R:](/J-#b`p2*T[r1#Ji4soNDX-BhBHJ;W'E/k5q;]MV-a1Q+Kle=[Pa::P8\_@_q)Uub
I<_"&g9k_6^HD).,OIX0YMQHQq1Rh>IJ`^cT7!qD;X2g;BHP7XE124>94(;_[9&DB&8C\D8L^,k/+sCu
jJg)^fG@a+dc@rYj2Pp+Ch!Qh5'2<eGBbX4f?XHAO*u"3"*A!]ief7h8<[]ZScK`>n[Zto/fjgulOIY"
9Q%nA-I7Q4"*EA1FkO#Q[O@rnF)l<,<8l3[%F@9Q%\\p.eu,bV,#+XP*;fHs.pFuTA[9gX_VqA]DG$KV
>E:EEC%;[(l*I#\C_mJ7;B)9G[(N'ufQZQ+U%f"N[MS[I?<.u1`B=4Z^E'guk>NZb5^1G44`olq]k^E2
5?rX0eN`iF&$d#>(8%rjII:Nld*D\dh1,J'(LD@F^%^C<n9'T*LCYIhGd,]$R[ouYF5="-mK6nk[;"*e
d+X6?fLp(3k3l;JC/(J$,ssZ:Y.su4Vk8E!qdOA=#^(Q/k7'B*nGMn(B4(+Hheh:IT1j+V[V^&*ntCg[
C:Fs6[QoKo>^lM1%mTu2_fb=rfQqo/V3f%<]]GG`:7O;+I6G"e4SIE;Tq-D`F]VaM-;$_#]e<KQ4]ZpH
]=[@.X4!8a6u5`!0=UQ,CTfmElrY3:FSm)NHhQeD+!:O*=2$F(@rsn[<b;H@l.?eV'U%OfHhZr_jOrCq
?IBGV';tHe>p(I@-8*"(deqa!2A"1uqs;%FqmtUp%l@"PQ.Z.#HLtn"YqNQR&5%]-X&jfHb?o-XSs@t/
:$U2^YqNO6,fqhN&7l6)@G(WT*oNEh:Lac#8=j%pDV`'WIsZl:r#;<f2#H>]5P`GPY@M"$/IG)?]]5#6
Ie0&dA7+dN$AmcIk]KeW^4#nQ^]48"P>]*S`P$TQb=][X\-E$3^UN'if_+FH2aICho:Q!Aii1eBkIKcI
bMTY)pnXbNN&5sI`kXMu?[M1JVGG5lIJWU2q"U75B8Z_hd)bY3ALm*.QX=WVH]YNPTFEdL@%UJl'l(5U
Mm5\oKV7Qc8NSBVb4^PKLMOf.YJ/`_el]0\,'8U;2c?]r3_$("dVil2`>40:hKl6eD)OIL8u2U:l_Kb0
c!lSt]g_LnbQd8MDnOJ>m#*G,Xcd<S2F(K+IBc57<Usu'HOWOhb3o0!/eG/)^9W="rV"uQJ,T&C2XNl#
-I9hNJ@6Bn@d=N+P%S>a5c\0M%*JigX84Z]5eQmOMk,gSOV\KT:S&P`1&B-Rhe]f?,X#hWhiN=GDB]t"
ceB%(*NKXq5QCXX'Fl-9ma^?(<Z7:C4THVWZ=E9m-iU'cmcR#c5Oq#KgtViEQMh$OdU`#U&N:fsL"b3M
^D309Q9&7e*B\Rcn(t_]IlRAeJHH.'fpq3IQ41lph3*'Jh#'L<D`<J=/&a`@Ud1t4Fbce#H6Erg(cFW\
:rtsRXWoDKXWoDFV-(1"=&?.M,aEC..A`fW^or`#6'\/Urs%ZoWYC6nZ#,#oTR'JVDLf08Ki6UAF\D6i
S2bM_Vt[rCV(s!_/#Zcu8Ar%>g.F5s0J"09/#Yo[&s7*_Y+SBaW1Wt2QWK9o((T;Q[<&0dOTc1kBVg[t
:s2H25_jgcgY]0GoP_M8mQXj"p[a+aIsgAMVG\3cF\@(&UqE'R5jQTPp,RNqn9KNMaH7_+-R0-i&quaA
RJ&sDl<)kBV'r.?WMr]De7M>>plmgEG?$^9`NNDrH`ZY8;AADa-UbE[#Z58H'K/5B'ad?]+kcpu="Xgh
:UWludjT@Fm[+(g56%U]WJ4U[pW"[uJCZ7&*>68t!EuZp'Ip<f>-C=:'#V<^>-Ca:&krahaKM,8="XhO
Ju[@9\Rd(f)#uo^5P`Ds-8tn[f1u;!<kFu.p\susktBl]pYCBWYLK?o<!>(!o>t!@bEJd-q72p(Kr++R
$<GW.RNmN#cZRiF[s.;t($7a>Do2],r]m9UoZXiroP0etj`^B#h,U:"e3D_/Anju8F?IkL?!2j`;9N3;
gl#Zb;8o8+:TbR!G>Eac5g7Kk^[G3k-k,tWBOq7m@(8*[.i*hn%FBEZ>J51FE*[SB5V+N?:/+G'4*I^O
%82Z$#&(ue6Xo7;5V!D"C2AE$+:sC'h>jZO'N4N1p"Hsn@C_i0-27#q`Nd"N@SpgEXAlO-"9>gn=24U^
huEY)rqsKGro_/`FPh/cWNf7EIWX-&O+$o@rW->jeE9EHT]Se%!s]<pO,kAFG]7*MK*(5cWDg.0Z_:gd
Dau&aU<nec0S4ieKiUTMe=t=i__i!]rZ<Xd'F&]i#-@q=?=1$NbmQ2;0W9_ca9H<EGNf(3njHn_LMJ"D
rBF>S..mOAH'O4QrX+XV*j4g<%KlcjVD.cd4aM5%Y$IMTDjoIoG0T+Cp!^<&=:b=Tg`oh/eX%AIIe`Ek
SND%5?8af(3B]MgC4QqM<cj*/%"p%9+pt(\L&N/H:E]L]XJSBo+G\-U)Mfc4GTsda^fIl5Z*a%<oM,nJ
?+NCqO4BIC%-2AQ!n$1@2'iTX5#tV4Lr-B7JCYqT"99!u;(LFr2,Y_fZuh'okRK<YKc!?QOjG+XTKC)b
m)P9jYElcqE$pD[*Kj;/,c+&q%P\NK(l[/Q-icLE$F`PS).K7#6pc*RJLJH%;Mp.q&-L`3#,OMLjGA4r
+-g13rjQGL2c:ot(e@8]clHR<$8Jac$360cE/TC4+U5MF,]neYLdDLqV+Be[1!gqM+:=6mP[^:I6pc*R
JLJH%;??j>1Im=UOs(%@6R6c/(l1Ke,c+&q%Pc<N@NZ#?OHa4I4%)DZLk-tm5Z.X`a>6>DKT[J_\jI`b
LDYh6$m_Z?kRK>o*F^,uOcYf:TK>P.GDLeu`'@3%!6De1JdXL2;)m@(hf5Ig)$j)Q7<aQ@mLTItLk2?9
$/Ha/\jHlo+VKr9%!77qkRK<YKc!?Qzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!#gs4`/.&c_n3!($Wlp
ENW;zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!3QCF_iX<~>
Q
Q
Q

%%Trailer
%%EOF
